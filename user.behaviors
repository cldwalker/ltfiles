[
 ;; The app tag is kind of like global scope. You assign behaviors that affect
 ;; all of Light Table here
 [:app :lt.objs.plugins/load-js "user_compiled.js"]
 ;; [:app :lt.objs.editor/load-addon ["dialog/dialog.js" "dialog/dialog.css"]]
  ;; [:editor :lt.objs.editor/set-codemirror-flags {:autoCloseTags #js {:indentTags ["html"]}}]
 [:app :lt.objs.app/set-default-zoom-level 0.8]
 ;; default w/ blob-storage for work
 [:app :lt.objs.files/file.ignore-pattern "(^\\..*)|\\.class$|target/|svn|cvs|\\.git|\\.pyc|~|\\.swp|\\.jar|.DS_Store|\\.nrepl-port|blob-storage"]
 [:app :lt.plugins.photon/set-directories
  [:plugins "~/code/fork" "~/code/cjars" "~/code/gems" "~/code/repo" "~/code/priv" "~/code/work" "~/.gitbeam" "~/code"]]
 [:app :-lt.objs.intro/show-intro]
 ;; [:app :lt.objs.metrics/disable-metrics]

 [:document :lt.objs.document/set-linked-doc-options {:shared-history true}]

 ;; The editor tag is applied to all editors
 [:editor :lt.objs.editor/autoclose-brackets]
 [:editor :lt.objs.editor/no-wrap]
 [:editor :lt.objs.style/set-theme "solarized"]
 ;; [:editor :-lt.plugins.vim/activate-vim]
 [:editor :-lt.plugins.emacs/activate-emacs]
 [:editor :lt.objs.editor/hide-line-numbers]
 [:editor :lt.objs.editor.pool/line-comment-options {:indent true}]
 [:editor :lt.plugins.reflow/set-width 80]
 ;; [:editor :lt.objs.editor/set-codemirror-flags {:smartIndent false}]
 ;; turn off aggressive autocomplete
 [:editor :-lt.plugins.auto-complete/auto-show-on-input]
 [:editor :-lt.plugins.ctags/on-result]
 ;; [:editor :lt.objs.editor/set-rulers [{:color "#cfc" :column 100 :lineStyle "dashed"}]]

 ;; turn off large info boxes while editing any behavior
 [:editor.behaviors :-lt.objs.langs.behaviors/show-info-on-move]

 [:editor.cljs :lt.plugins.user.clojure/cljs-result.eval-once]

 [:editor.clojure :lt.plugins.clojure/print-length 1000]
 [:editor.clojure :lt.plugins.user.clojure/clj-result.eval-once]

 ;; allow transient files to close without prompt
 [:editor.transient :-lt.objs.editor.file/dirty-on-change]
 [:files :lt.objs.files/file-types [{:exts [:cljs.hl :boot], :mime "text/x-clojurescript", :tags [:editor.cljs], :name "hoplon"}
                                    ;; Enable when working with react code
                                    ;; {:exts [:js], :mime "text/jsx", :tags [:editor.javascript], :name "Javascript"}
                                    {:exts [:cljx], :mime "text/x-clojure", :tags [:editor.clj], :name "cljx"}]]

 [:navigate.selector :lt.plugins.user.document/open-with-jump-stack-on-select]
 [:navigate.selector :-lt.objs.sidebar.navigate/open-on-select]

  ;; nrepl remote cljs debug
 [:app :lt.plugins.clojure/set-default-cljs-client nil]
 [:nrepl.client.common :lt.plugins.clojure/cljs-result]
 [:nrepl.client.common :lt.plugins.clojure/cljs-exception]
]
